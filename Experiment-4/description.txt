Live Character Counter

Description:

This project is a live character counter web application. It enables users to type text into a textarea and immediately view the number of characters entered.
The character count updates dynamically as the user types, deletes, or pastes content, providing real-time feedback.

HTML Structure and Element Details

1. Container Box (<div class="box">)
   Purpose: Acts as the central wrapper for the character counter interface.
   Contents: Heading, textarea, and character count display.
   Behavior: Centered within the page, styled with a white background, border, and rounded corners for clarity and focus.

2. Heading (<h3>Live Character Counter</h3>)
   Purpose: Serves as the title of the application.
   Behavior: Positioned at the top of the container, separated from the textarea by margin spacing.

3. Textarea (<textarea id="text">)
   Purpose: Input area where the user types text.
   Attributes:
   - id="text" for JavaScript targeting
   - placeholder="Start typing..." to guide the user
   Behavior: Fills the available width of the container, resizable vertically, and styled for readability.

4. Character Counter Display (<div id="count" class="count">)
   Purpose: Displays the live character count.
   Attributes:
   - id="count" for JavaScript updates
   - class="count" for bold styling
   Behavior: Initializes at “Characters: 0” and updates dynamically as the user interacts with the textarea.

CSS Styling Breakdown

1. Body
   - Light gray background (#f5f5f5) for visual contrast
   - Flexbox layout centers the container both vertically and horizontally
   - Global sans-serif font for clean appearance

2. Container Box (.box)
   - White background with subtle border (#222)
   - Padding applied for spacing inside the container
   - Rounded corners for improved aesthetics
   - Maximum width set to 500px to maintain compact layout on larger screens

3. Heading (h3)
   - Bottom margin provides spacing between the heading and textarea

4. Textarea
   - Full-width expansion inside the container
   - Default height of 100px with vertical resize capability
   - Padding and font-size adjustments for comfortable text entry
   - Box-sizing set to border-box to preserve proper sizing with padding

5. Character Counter (.count)
   - Bold font weight to emphasize the displayed character count

JavaScript Functionality

1. Variable Selection
   - textarea references the user input field
   - counter references the character count display element

2. Event Listener
   - Listens for the “input” event on the textarea
   - Updates the content of the counter dynamically using textarea.value.length

3. Behavior
   - Initial state displays “Characters: 0”
   - Count increases as the user types
   - Count decreases when characters are deleted
   - Supports all forms of text input including typing, pasting, and deletion

Result:

The result is a responsive and minimal character counting tool with real-time updates. It provides immediate feedback on text length and is suitable for embedding 
into larger applications where monitoring character input is required.
